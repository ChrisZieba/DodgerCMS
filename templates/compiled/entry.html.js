this["dodgercms"] = this["dodgercms"] || {};
this["dodgercms"]["templates"] = this["dodgercms"]["templates"] || {};

this["dodgercms"]["templates"]["entry.html"] = Handlebars.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    var stack1, helper, alias1=helpers.helperMissing, alias2="function";

  return "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n\n    <title></title>\n    \n    <meta name=\"description\" content=\"\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n\n\n    <link rel=\"apple-touch-icon\" href=\"apple-touch-icon.png\">\n\n    <!-- Place favicon.ico in the root directory -->\n\n\n    <link rel=\"stylesheet\" href=\"http://yui.yahooapis.com/pure/0.6.0/pure-min.css\">\n    <link rel=\"stylesheet\" href=\"http://yui.yahooapis.com/pure/0.6.0/grids-responsive-min.css\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/github.min.css\">\n\n    <script src=\"https://code.jquery.com/jquery-2.1.3.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js\"></script>\n    <script>hljs.initHighlightingOnLoad();</script>\n    <script>var BUCKET = '"
    + ((stack1 = ((helper = (helper = helpers.bucket || (depth0 != null ? depth0.bucket : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"bucket","hash":{},"data":data}) : helper))) != null ? stack1 : "")
    + "';</script>\n    <script>var ENDPOINT = '"
    + ((stack1 = ((helper = (helper = helpers.endpoint || (depth0 != null ? depth0.endpoint : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"endpoint","hash":{},"data":data}) : helper))) != null ? stack1 : "")
    + "';</script>\n\n   <style>\n        body {\n            color: #777;\n        }\n\n        ul.pure-menu-list { \n          margin-left: 0; \n          padding-left: 1.5em; \n        }\n\n        ul.pure-menu-list li { \n          padding-top:0.15em;\n          padding-bottom:0.15em;\n        }\n\n        ul.pure-menu-list ul { \n          margin-left: 0.5em; \n          padding-left: 0.5em; \n        }\n\n\n        .pure-img-responsive {\n            max-width: 100%;\n            height: auto;\n        }\n\n        /*\n        Add transition to containers so they can push in and out.\n        */\n        #layout,\n        #menu,\n        .menu-link {\n            -webkit-transition: all 0.2s ease-out;\n            -moz-transition: all 0.2s ease-out;\n            -ms-transition: all 0.2s ease-out;\n            -o-transition: all 0.2s ease-out;\n            transition: all 0.2s ease-out;\n        }\n\n        #entry {\n            padding:1.5em 3.25em;\n        }\n        /*\n        This is the parent `<div>` that contains the menu and the content area.\n        */\n        #layout {\n            position: relative;\n            padding-left: 0;\n        }\n            #layout.active #menu {\n                left: 300px;\n                width: 300px;\n            }\n\n            #layout.active .menu-link {\n                left: 300px;\n            }\n        /*\n        The content `<div>` is where all your content goes.\n        */\n        .content {\n            margin: 0;\n            padding: 0;\n            margin-bottom: 50px;\n            line-height: 1.8em;\n        }\n\n        .header {\n             margin: 0;\n             padding: 0;\n             border-bottom: 1px solid #e1e1e1;\n             height:75px;\n             background-color: #f7f7f7;\n         }\n\n         .header .breadcrumbs {\n             color: #333;\n             padding: 1.5em 3.25em 0 3.25em;\n         }\n\n         .title {\n            margin: 0 0 2em 0;\n            padding-bottom: 0.75em;\n            border-bottom: 1px solid #f0f0f0;\n         }\n\n        .title h1 {\n            margin: 0 0 0.1em 0;\n            font-size: 2.25em;\n            color: #404040;\n            font-weight: 400;\n            overflow:hidden;\n        }\n\n          .title p {\n            color: #9d9d9d;\n            padding: 0.25em 0;\n            margin: 0;\n            font-size: 100%;\n          }\n\n\n\n        /*\n        The `#menu` `<div>` is the parent `<div>` that contains the `.pure-menu` that\n        appears on the left side of the page.\n        */\n\n        #menu {\n            margin-left: -300px; /* \"#menu\" width */\n            width: 300px;\n            position: fixed;\n            top: 0;\n            left: 0;\n            bottom: 0;\n            z-index: 1000; /* so the menu or its navicon stays above all content */\n            background: #191818;\n            overflow-y: auto;\n            -webkit-overflow-scrolling: touch;\n            overflow-x:hidden;\n        }\n            /*\n            All anchors inside the menu should be styled like this.\n            */\n            #menu .pure-menu-list a {\n                color: #999;\n                border: none;\n                padding: 0.0em 0 0.0em 0.1em;\n                font-size: 90%;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n                font-weight: 300;\n            }\n\n            /*\n            Remove all background/borders, since we are applying them to #menu.\n            */\n             #menu .pure-menu,\n             #menu .pure-menu ul {\n                border: none;\n                background: transparent;\n            }\n                /*\n                Change color of the anchor links on hover/focus.\n                */\n                #menu .pure-menu li a:hover,\n                #menu .pure-menu li a:focus {\n                    background: #333;\n                }\n\n            /*\n            This styles the selected menu item `<li>`.\n            */\n            #menu .pure-menu-selected,\n            #menu .pure-menu-heading {\n                background: #1f8dd6;\n            }\n                /*\n                This styles a link within a selected menu item `<li>`.\n                */\n                #menu .pure-menu-selected a {\n                    color: #fff;\n                }\n\n            /*\n            This styles the menu heading.\n            */\n            #menu .pure-menu-heading {\n                color: #fff;\n                margin: 0 0 1.5em 0;\n                padding: 0;\n                height:75px;\n                border-bottom: 1px solid #107AC0;\n            }\n\n        /* -- Dynamic Button For Responsive Menu -------------------------------------*/\n\n        /*\n        The button to open/close the Menu is custom-made and not part of Pure. Here's\n        how it works:\n        */\n\n        /*\n        `.menu-link` represents the responsive menu toggle that shows/hides on\n        small screens.\n        */\n        .menu-link {\n            position: fixed;\n            display: block; /* show this only on small screens */\n            top: 0;\n            left: 0; /* \"#menu width\" */\n            background: #000;\n            background: rgba(0,0,0,0.7);\n            font-size: 10px; /* change this value to increase/decrease button size */\n            z-index: 10;\n            width: 1em;\n            height: auto;\n            padding: 2.1em 1.6em;\n        }\n\n            .menu-link:hover,\n            .menu-link:focus {\n                background: #000;\n            }\n\n            .menu-link span {\n                position: relative;\n                display: block;\n            }\n\n            .menu-link span,\n            .menu-link span:before,\n            .menu-link span:after {\n                background-color: #fff;\n                width: 100%;\n                height: 0.2em;\n            }\n\n                .menu-link span:before,\n                .menu-link span:after {\n                    position: absolute;\n                    margin-top: -0.6em;\n                    content: \" \";\n                }\n\n                .menu-link span:after {\n                    margin-top: 0.6em;\n                }\n\n\n        /* -- Responsive Styles (Media Queries) ------------------------------------- */\n\n        /*\n        Hides the menu at `48em`, but modify this based on your app's needs.\n        */\n        @media (min-width: 48em) {\n\n/*            .header,\n            .content {\n                padding-left: 2em;\n                padding-right: 2em;\n            }*/\n\n            #layout {\n                padding-left: 300px; /* left col width \"#menu\" */\n                left: 0;\n            }\n            #menu {\n                left: 300px;\n            }\n\n            .menu-link {\n                position: fixed;\n                left: 300px;\n                display: none;\n            }\n\n            #layout.active .menu-link {\n                left: 300px;\n            }\n        }\n\n        @media (max-width: 48em) {\n            /* Only apply this when the window is small. Otherwise, the following\n            case results in extra padding on the left:\n                * Make the window small.\n                * Tap the menu to trigger the active state.\n                * Make the window large again.\n            */\n            #layout.active {\n                position: relative;\n                left: 300px;\n            }\n        }\n    </style>\n</head>\n    <body>\n        <div id=\"layout\">\n            <a href=\"#menu\" id=\"menuLink\" class=\"menu-link\">\n                <!-- Hamburger icon -->\n                <span></span>\n            </a>\n\n            <nav id=\"menu\"></nav>\n\n            <!-- The menu is loaded dynamically since it changes often. -->\n            <script>\n                $(\"nav\").load(ENDPOINT + \".dodgercms/nav.html\");\n            </script>\n\n            <article>\n                <div class=\"header\">\n                    <h1>Title</h1>\n                    <p>Last edited on "
    + this.escapeExpression(((helper = (helper = helpers.data || (depth0 != null ? depth0.data : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"data","hash":{},"data":data}) : helper)))
    + "</p>\n                </div>\n                <div class=\"content\">\n                <!-- The converted markdown content. -->\n                    "
    + ((stack1 = ((helper = (helper = helpers.body || (depth0 != null ? depth0.body : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"body","hash":{},"data":data}) : helper))) != null ? stack1 : "")
    + "\n                </div>\n            </article>\n\n            <footer>\n\n            </footer>\n        </div>\n\n\n        <script>\n            (function (window, document) {\n\n                var layout = document.getElementById('layout'),\n                    menu = document.getElementById('menu'),\n                    menuLink = document.getElementById('menuLink');\n\n                function toggleClass(element, className) {\n                    var classes = element.className.split(/\\s+/),\n                        length = classes.length;\n\n                    for (var i = 0; i < length; i++) {\n                        if (classes[i] === className) {\n                            classes.splice(i, 1);\n                            break;\n                        }\n                    }\n                    \n                    // The className is not found\n                    if (length === classes.length) {\n                        classes.push(className);\n                    }\n\n                    element.className = classes.join(' ');\n                }\n\n                menuLink.onclick = function (e) {\n                    var active = 'active';\n\n                    e.preventDefault();\n                    toggleClass(layout, active);\n                    toggleClass(menu, active);\n                    toggleClass(menuLink, active);\n                };\n\n            }(this, this.document));\n            </script>\n\n    </body>\n</html>";
},"useData":true});